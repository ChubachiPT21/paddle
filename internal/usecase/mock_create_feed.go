// Code generated by MockGen. DO NOT EDIT.
// Source: create_feed.go

// Package usecase is a generated GoMock package.
package usecase

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCreateFeedInterface is a mock of CreateFeedInterface interface.
type MockCreateFeedInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCreateFeedInterfaceMockRecorder
}

// MockCreateFeedInterfaceMockRecorder is the mock recorder for MockCreateFeedInterface.
type MockCreateFeedInterfaceMockRecorder struct {
	mock *MockCreateFeedInterface
}

// NewMockCreateFeedInterface creates a new mock instance.
func NewMockCreateFeedInterface(ctrl *gomock.Controller) *MockCreateFeedInterface {
	mock := &MockCreateFeedInterface{ctrl: ctrl}
	mock.recorder = &MockCreateFeedInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateFeedInterface) EXPECT() *MockCreateFeedInterfaceMockRecorder {
	return m.recorder
}

// CreateFeed mocks base method.
func (m *MockCreateFeedInterface) CreateFeed(sourceID int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFeed", sourceID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFeed indicates an expected call of CreateFeed.
func (mr *MockCreateFeedInterfaceMockRecorder) CreateFeed(sourceID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFeed", reflect.TypeOf((*MockCreateFeedInterface)(nil).CreateFeed), sourceID)
}

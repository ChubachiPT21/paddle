// Code generated by MockGen. DO NOT EDIT.
// Source: create_source.go

// Package mock_usecase is a generated GoMock package.
package usecase

import (
	reflect "reflect"

	orm "github.com/ChubachiPT21/paddle/pkg/orm"
	gomock "github.com/golang/mock/gomock"
)

// MockCreateSourceInterface is a mock of CreateSourceInterface interface.
type MockCreateSourceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCreateSourceInterfaceMockRecorder
}

// MockCreateSourceInterfaceMockRecorder is the mock recorder for MockCreateSourceInterface.
type MockCreateSourceInterfaceMockRecorder struct {
	mock *MockCreateSourceInterface
}

// NewMockCreateSourceInterface creates a new mock instance.
func NewMockCreateSourceInterface(ctrl *gomock.Controller) *MockCreateSourceInterface {
	mock := &MockCreateSourceInterface{ctrl: ctrl}
	mock.recorder = &MockCreateSourceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateSourceInterface) EXPECT() *MockCreateSourceInterfaceMockRecorder {
	return m.recorder
}

// CreateSource mocks base method.
func (m *MockCreateSourceInterface) CreateSource(source *orm.Source) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSource", source)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSource indicates an expected call of CreateSource.
func (mr *MockCreateSourceInterfaceMockRecorder) CreateSource(source interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSource", reflect.TypeOf((*MockCreateSourceInterface)(nil).CreateSource), source)
}
